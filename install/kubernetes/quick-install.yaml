apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: harborsyncconfigs.crd.harborsync.k8s.io
spec:
  group: crd.harborsync.k8s.io
  names:
    kind: HarborSyncConfig
    plural: harborsyncconfigs
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: HarborSyncConfig is the Schema for the harborsyncconfigs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HarborSyncConfigSpec defines the desired state of HarborSyncConfig
          properties:
            projectSelector:
              description: ProjectSelector specifies a list of projects to look up
                and synchronize
              items:
                description: ProjectSelector defines how to select harbor projects
                properties:
                  mapping:
                    description: The Mapping contains the mapping from project to
                      a secret in a namespace
                    items:
                      description: ProjectMapping defines how projects are mapped
                        to secrets in specific namespaces
                      properties:
                        namespace:
                          type: string
                        secret:
                          type: string
                        type:
                          description: MappingType specifies how to map the project
                            into the namespace/secret Only one of the following matching
                            types may be specified. If none of the following types
                            is specified, the default one is Translate.
                          enum:
                          - Translate
                          - Match
                          type: string
                      required:
                      - namespace
                      - secret
                      - type
                      type: object
                    type: array
                  name:
                    description: ProjectName specifies the project name
                    type: string
                  robotAccountSuffix:
                    description: The RobotAccountSuffix specifies the suffix to use
                      when creating a new robot account
                    minLength: 4
                    type: string
                  type:
                    description: 'Specifies how to do matching on a harbor project.
                      Valid values are: - "Regex" (default): interpret the project
                      name as regular expression;'
                    enum:
                    - Regex
                    type: string
                  webhook:
                    description: Webhook is WIP
                    items:
                      description: WebhookConfig defines how to call a webhook
                      type: object
                    type: array
                required:
                - mapping
                - name
                - robotAccountSuffix
                - type
                type: object
              type: array
          required:
          - projectSelector
          type: object
        status:
          description: HarborSyncConfigStatus defines the observed state of HarborSyncConfig
          properties:
            credentials:
              additionalProperties:
                description: RobotAccountCredentials holds a list of credentials
                items:
                  description: RobotAccountCredential holds the robot account name
                    & token to access the harbor API
                  properties:
                    name:
                      type: string
                    token:
                      type: string
                  required:
                  - name
                  - token
                  type: object
                type: array
              type: object
          required:
          - credentials
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - crd.harborsync.k8s.io
  resources:
  - harborsyncconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - crd.harborsync.k8s.io
  resources:
  - harborsyncconfigs/status
  verbs:
  - get
  - patch
  - update
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - -harbor-poll-interval=2m
        - -force-sync-interval=5m
        command:
        - /manager
        image: docker.io/moolen/harbor-sync:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
